openapi: 3.0.3
info:
  title: My API
  version: 1.0.0
  description: API documentation for my project
paths:
  /api/auth/token/:
    post:
      operationId: api_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/customers/:
    get:
      operationId: api_customers_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerList'
          description: ''
    post:
      operationId: api_customers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers/{customer_id}/orders/:
    get:
      operationId: api_customers_orders_retrieve
      description: Get all orders for a specific customer
      parameters:
      - in: path
        name: customer_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/customers/{id}/:
    get:
      operationId: api_customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_customers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_customers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_customers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/customers/stats/:
    get:
      operationId: api_customers_stats_retrieve
      description: Get customer statistics
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: Login for sellers
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      parameters:
      - in: query
        name: customer
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - approved
          - cancelled
          - completed
          - pending
        description: |-
          * `pending` - Pending
          * `approved` - Approved
          * `active` - Active
          * `completed` - Completed
          * `cancelled` - Cancelled
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreate'
          description: ''
  /api/orders/{order_id}/approve/:
    post:
      operationId: api_orders_approve_create
      description: Approve an order and generate installments
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/customers/{customer_id}/portal/:
    get:
      operationId: api_orders_customers_portal_retrieve
      description: Get data for customer portal
      parameters:
      - in: path
        name: customer_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/dashboard/stats/:
    get:
      operationId: api_orders_dashboard_stats_retrieve
      description: Get dashboard statistics for sellers with optional date range filters
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date (YYYY-MM-DD) - overrides range if provided
      - in: query
        name: range
        schema:
          type: string
        description: 'Date range: today, yesterday, last_7, last_30, last_90, last_year,
          this_month, last_month'
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date (YYYY-MM-DD) - overrides range if provided
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/due-installments/:
    get:
      operationId: api_orders_due_installments_retrieve
      description: 'Get installments due in a date range (default: today) and overdue'
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date (YYYY-MM-DD) - overrides range if provided
      - in: query
        name: range
        schema:
          type: string
        description: 'Date range: today, yesterday, last_7, last_30, last_90, last_year,
          this_month, last_month'
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date (YYYY-MM-DD) - overrides range if provided
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/installments/:
    get:
      operationId: api_orders_installments_list
      parameters:
      - in: query
        name: due_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - overdue
          - paid
          - pending
        description: |-
          * `pending` - Pending
          * `paid` - Paid
          * `overdue` - Overdue
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInstallmentList'
          description: ''
  /api/orders/installments/{id}/:
    get:
      operationId: api_orders_installments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installment'
          description: ''
    put:
      operationId: api_orders_installments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Installment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Installment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Installment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installment'
          description: ''
    patch:
      operationId: api_orders_installments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstallment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstallment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstallment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installment'
          description: ''
    delete:
      operationId: api_orders_installments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/payment-reminders/:
    get:
      operationId: api_orders_payment_reminders_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: reminder_type
        schema:
          type: string
          enum:
          - email
          - in_app
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `in_app` - In-App Notification
      - in: query
        name: scheduled_date
        schema:
          type: string
          format: date-time
      - in: query
        name: sent_date
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - failed
          - pending
          - sent
        description: |-
          * `pending` - Pending
          * `sent` - Sent
          * `failed` - Failed
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentReminderList'
          description: ''
    post:
      operationId: api_orders_payment_reminders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminder'
          description: ''
  /api/orders/payment-reminders/{id}/:
    get:
      operationId: api_orders_payment_reminders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminder'
          description: ''
    put:
      operationId: api_orders_payment_reminders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentReminder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminder'
          description: ''
    patch:
      operationId: api_orders_payment_reminders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentReminder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentReminder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentReminder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentReminder'
          description: ''
    delete:
      operationId: api_orders_payment_reminders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/payments/:
    get:
      operationId: api_orders_payments_list
      parameters:
      - in: query
        name: order
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: payment_method
        schema:
          type: string
          enum:
          - bank_transfer
          - card
          - cash
          - check
          - other
        description: |-
          * `cash` - Cash
          * `card` - Credit/Debit Card
          * `bank_transfer` - Bank Transfer
          * `check` - Check
          * `other` - Other
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: api_orders_payments_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/orders/payments/{id}/:
    get:
      operationId: api_orders_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: api_orders_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: api_orders_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: api_orders_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/reports/detailed/:
    get:
      operationId: api_orders_reports_detailed_retrieve
      description: Get detailed reports with filters
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/orders/reports/summary/:
    get:
      operationId: api_orders_reports_summary_retrieve
      description: Get comprehensive reports summary with optional date range filters
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: End date (YYYY-MM-DD) - overrides range if provided
      - in: query
        name: range
        schema:
          type: string
        description: 'Date range: today, yesterday, last_7, last_30, last_90, last_year,
          this_month, last_month'
      - in: query
        name: start_date
        schema:
          type: string
        description: Start date (YYYY-MM-DD) - overrides range if provided
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/categories/:
    get:
      operationId: api_products_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: api_products_categories_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/products/categories/{id}/:
    get:
      operationId: api_products_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_products_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_products_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_products_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/stats/:
    get:
      operationId: api_products_stats_retrieve
      description: Get product statistics for the seller
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/profile/:
    get:
      operationId: api_profile_retrieve
      description: Get current seller profile
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      description: Register a new seller
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/sellers/:
    get:
      operationId: api_sellers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellerList'
          description: ''
    post:
      operationId: api_sellers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
  /api/sellers/{id}/:
    get:
      operationId: api_sellers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    put:
      operationId: api_sellers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Seller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Seller'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    patch:
      operationId: api_sellers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSeller'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
          description: ''
    delete:
      operationId: api_sellers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          nullable: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - email
      - first_name
      - full_name
      - id
      - last_name
      - phone_number
      - updated_at
    Installment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        installment_number:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        status:
          allOf:
          - $ref: '#/components/schemas/InstallmentStatusEnum'
          readOnly: true
        paid_date:
          type: string
          format: date
          readOnly: true
          nullable: true
      required:
      - amount
      - due_date
      - id
      - installment_number
      - paid_date
      - status
    InstallmentStatusEnum:
      enum:
      - pending
      - paid
      - overdue
      type: string
      description: |-
        * `pending` - Pending
        * `paid` - Paid
        * `overdue` - Overdue
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        customer_id:
          type: integer
          writeOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        down_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        installment_count:
          type: integer
        monthly_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        order_date:
          type: string
          format: date-time
          readOnly: true
        approved_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        remaining_balance:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        installments:
          type: array
          items:
            $ref: '#/components/schemas/Installment'
          readOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
          readOnly: true
      required:
      - approved_date
      - customer
      - customer_id
      - id
      - installment_count
      - installments
      - is_overdue
      - monthly_payment
      - order_date
      - payments
      - product
      - product_id
      - remaining_balance
      - total_amount
    OrderCreate:
      type: object
      description: Simplified serializer for creating orders
      properties:
        customer:
          type: integer
        product:
          type: integer
        quantity:
          type: integer
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        down_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        installment_count:
          type: integer
        notes:
          type: string
      required:
      - customer
      - installment_count
      - product
      - total_amount
    OrderStatusEnum:
      enum:
      - pending
      - approved
      - active
      - completed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `active` - Active
        * `completed` - Completed
        * `cancelled` - Cancelled
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCustomerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    PaginatedInstallmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Installment'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedPaymentReminderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentReminder'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedSellerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Seller'
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCustomer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          nullable: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          maxLength: 20
        address:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedInstallment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        installment_number:
          type: integer
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
        status:
          allOf:
          - $ref: '#/components/schemas/InstallmentStatusEnum'
          readOnly: true
        paid_date:
          type: string
          format: date
          readOnly: true
          nullable: true
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
        customer_id:
          type: integer
          writeOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        down_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        installment_count:
          type: integer
        monthly_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        order_date:
          type: string
          format: date-time
          readOnly: true
        approved_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        notes:
          type: string
        remaining_balance:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        installments:
          type: array
          items:
            $ref: '#/components/schemas/Installment'
          readOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
          readOnly: true
    PatchedPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
        reference_number:
          type: string
          maxLength: 100
        notes:
          type: string
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedPaymentReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/ReminderTypeEnum'
        scheduled_date:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/PaymentReminderStatusEnum'
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        seller:
          type: integer
          readOnly: true
        category:
          type: integer
          nullable: true
        category_name:
          type: string
          readOnly: true
        seller_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
          nullable: true
        sku:
          type: string
          maxLength: 50
        stock_quantity:
          type: integer
        is_active:
          type: boolean
        min_installments:
          type: integer
        max_installments:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSeller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/CustomUser'
        business_name:
          type: string
          nullable: true
          maxLength: 200
        business_address:
          type: string
          nullable: true
        phone_number:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        tax_id:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_date:
          type: string
          format: date-time
          readOnly: true
        reference_number:
          type: string
          maxLength: 100
        notes:
          type: string
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - amount
      - created_by
      - id
      - payment_date
      - payment_method
    PaymentMethodEnum:
      enum:
      - cash
      - card
      - bank_transfer
      - check
      - other
      type: string
      description: |-
        * `cash` - Cash
        * `card` - Credit/Debit Card
        * `bank_transfer` - Bank Transfer
        * `check` - Check
        * `other` - Other
    PaymentReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/ReminderTypeEnum'
        scheduled_date:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/PaymentReminderStatusEnum'
        message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - message
      - reminder_type
      - scheduled_date
    PaymentReminderStatusEnum:
      enum:
      - pending
      - sent
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `sent` - Sent
        * `failed` - Failed
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        seller:
          type: integer
          readOnly: true
        category:
          type: integer
          nullable: true
        category_name:
          type: string
          readOnly: true
        seller_name:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        image:
          type: string
          format: uri
          nullable: true
        sku:
          type: string
          maxLength: 50
        stock_quantity:
          type: integer
        is_active:
          type: boolean
        min_installments:
          type: integer
        max_installments:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category_name
      - created_at
      - description
      - id
      - name
      - price
      - seller
      - seller_name
      - sku
      - updated_at
    ReminderTypeEnum:
      enum:
      - email
      - sms
      - in_app
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `in_app` - In-App Notification
    Seller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/CustomUser'
        business_name:
          type: string
          nullable: true
          maxLength: 200
        business_address:
          type: string
          nullable: true
        phone_number:
          type: string
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        tax_id:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - phone_number
      - user
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
